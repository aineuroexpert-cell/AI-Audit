'use client';
import { useState, FormEvent, ChangeEvent } from 'react';
import { ROIFormData, ROIResults } from '@/types';
import './ROICalculator.css';

export default function ROICalculator(): JSX.Element {
  const [formData, setFormData] = useState<ROIFormData>({
    businessSize: 'small',
    industry: 'retail', 
    revenue: 1000000,
    budget: 200000
  });
  
  const [showResult, setShowResult] = useState<boolean>(false);
  const [results, setResults] = useState<ROIResults>({
    roi: 0,
    savings: 0,
    growth: 0,
    payback: 0
  });

  // –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
  const sizeMultipliers: Record<ROIFormData['businessSize'], number> = {
    small: 3.2,
    medium: 4.5,
    large: 6.0
  };
  
  const industryMultipliers: Record<ROIFormData['industry'], number> = {
    retail: 1.2,
    services: 1.3,
    production: 1.1,
    it: 1.5,
    other: 1.0
  };

  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: name === 'revenue' || name === 'budget' ? Number(value) : value
    } as ROIFormData));
  };

  const calculateROI = async (): Promise<void> => {
    const { businessSize, industry, revenue, budget } = formData;
    
    // –†–∞—Å—á–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π
    const baseROI = sizeMultipliers[businessSize] * industryMultipliers[industry];
    const roi = Math.round(baseROI * 100);
    const savings = Math.round(revenue * 0.085);
    const growth = Math.round(35 * industryMultipliers[industry]);
    const monthlyBenefit = savings + (revenue * growth / 100 / 12);
    const payback = budget > 0 ? (budget / monthlyBenefit).toFixed(1) : 0;
    
    const calculatedResults = {
      roi,
      savings,
      growth,
      payback
    };
    
    setResults(calculatedResults);
    setShowResult(true);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    if (typeof window !== 'undefined' && window.gtag) {
      window.gtag('event', 'roi_calculated', {
        business_size: businessSize,
        industry: industry,
        roi_result: roi
      });
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    try {
      await fetch('/api/telegram-notify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          type: 'roi_calculation',
          data: {
            revenue: newMonthlyRevenue,
            costs: newMonthlyCosts,
            roi: newRoi,
            timestamp: new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })
          }
        })
      }).catch(console.error);
    } catch (error) {
      console.error('Error sending Telegram notification:', error);
    }
  };

  const requestConsultation = () => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º AI —á–∞—Ç —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const aiChat = document.querySelector('.ai-float-button');
    if (aiChat) aiChat.click();
    
    // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ —á–∞—Ç
    setTimeout(() => {
      const input = document.querySelector('.ai-input-area input');
      if (input) {
        input.value = `–Ø —Ä–∞—Å—Å—á–∏—Ç–∞–ª ROI: ${results.roi}%. –ë–∏–∑–Ω–µ—Å: ${formData.businessSize}, –æ—Ç—Ä–∞—Å–ª—å: ${formData.industry}. –•–æ—á—É —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è.`;
        input.dispatchEvent(new Event('input', { bubbles: true }));
      }
    }, 500);
  };

  return (
    <section className="roi-calculator" id="calculator">
      <div className="calculator-container">
        <div className="section-header">
          <h2>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä <span className="gradient-text">ROI</span></h2>
          <p>–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤—ã–≥–æ–¥—É –æ—Ç —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –∑–∞ 2 –º–∏–Ω—É—Ç—ã</p>
        </div>
        
        <div className="calc-form">
          <div className="form-group">
            <label>–†–∞–∑–º–µ—Ä –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</label>
            <select 
              name="businessSize" 
              value={formData.businessSize}
              onChange={handleInputChange}
            >
              <option value="small">–ú–∞–ª—ã–π (–¥–æ 10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)</option>
              <option value="medium">–°—Ä–µ–¥–Ω–∏–π (10-100 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)</option>
              <option value="large">–ö—Ä—É–ø–Ω—ã–π (100+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)</option>
            </select>
          </div>
          
          <div className="form-group">
            <label>–û—Ç—Ä–∞—Å–ª—å</label>
            <select 
              name="industry" 
              value={formData.industry}
              onChange={handleInputChange}
            >
              <option value="retail">–†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è</option>
              <option value="services">–£—Å–ª—É–≥–∏</option>
              <option value="production">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</option>
              <option value="it">IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</option>
              <option value="other">–î—Ä—É–≥–æ–µ</option>
            </select>
          </div>
          
          <div className="form-group">
            <label>–¢–µ–∫—É—â–∞—è –≤—ã—Ä—É—á–∫–∞ –≤ –º–µ—Å—è—Ü (‚ÇΩ)</label>
            <input 
              type="number" 
              name="revenue"
              value={formData.revenue}
              onChange={handleInputChange}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1000000"
            />
          </div>
          
          <div className="form-group">
            <label>–ë—é–¥–∂–µ—Ç –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é (‚ÇΩ)</label>
            <input 
              type="number" 
              name="budget"
              value={formData.budget}
              onChange={handleInputChange}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 200000"
            />
          </div>
          
          <button 
            type="button" 
            className="btn-primary"
            onClick={calculateROI}
          >
            üéØ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã–≥–æ–¥—É
          </button>
        </div>
        
        {showResult && (
          <div className="calc-result show">
            <div className="result-header">
              <h3>üéâ –í–∞—à –ø—Ä–æ–≥–Ω–æ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
              <div className="result-badge">
                {results.roi > 300 ? '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!' : '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!'}
              </div>
            </div>
            
            <div className="result-grid">
              <div className="result-card">
                <div className="result-icon">üìà</div>
                <div className="result-content">
                  <div className="result-value">{results.roi}%</div>
                  <div className="result-label">ROI —á–µ—Ä–µ–∑ 6 –º–µ—Å—è—Ü–µ–≤</div>
                </div>
              </div>
              
              <div className="result-card">
                <div className="result-icon">üí∞</div>
                <div className="result-content">
                  <div className="result-value">{results.savings.toLocaleString('ru-RU')}‚ÇΩ</div>
                  <div className="result-label">–≠–∫–æ–Ω–æ–º–∏—è –≤ –º–µ—Å—è—Ü</div>
                </div>
              </div>
              
              <div className="result-card">
                <div className="result-icon">üöÄ</div>
                <div className="result-content">
                  <div className="result-value">+{results.growth}%</div>
                  <div className="result-label">–†–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏</div>
                </div>
              </div>
              
              <div className="result-card">
                <div className="result-icon">‚è±</div>
                <div className="result-content">
                  <div className="result-value">{results.payback} –º–µ—Å</div>
                  <div className="result-label">–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å</div>
                </div>
              </div>
            </div>
            
            <div className="result-actions">
              <button 
                className="btn-primary"
                onClick={requestConsultation}
              >
                üí¨ –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
              </button>
              
              <button 
                className="btn-secondary"
                onClick={() => {
                  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ localStorage
                  localStorage.setItem('roiCalculation', JSON.stringify({
                    ...formData,
                    results,
                    date: new Date().toISOString()
                  }));
                  alert('–†–∞—Å—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–µ–º—É –ø–æ–∑–∂–µ.');
                }}
              >
                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å—á–µ—Ç
              </button>
            </div>
            
            <div className="result-disclaimer">
              <p>* –†–∞—Å—á–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è—Ö –ø–æ –æ—Ç—Ä–∞—Å–ª–∏. –¢–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.</p>
            </div>
          </div>
        )}
      </div>
    </section>
  );
}