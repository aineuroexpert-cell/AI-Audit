'use client';
import { useState } from 'react';
import './ContactForm.css';

export default function ContactForm() {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    company: '',
    message: ''
  });
  
  const [status, setStatus] = useState({
    loading: false,
    success: false,
    error: false,
    message: ''
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const formatPhone = (phone) => {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleaned = phone.replace(/\D/g, '');
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    const match = cleaned.match(/^(\d{1})(\d{3})(\d{3})(\d{2})(\d{2})$/);
    if (match) {
      return `+${match[1]} (${match[2]}) ${match[3]}-${match[4]}-${match[5]}`;
    }
    return phone;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name || !formData.phone) {
      setStatus({
        loading: false,
        success: false,
        error: true,
        message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'
      });
      return;
    }

    setStatus({ loading: true, success: false, error: false, message: '' });

    try {
      setStatus({ loading: true, success: false, error: false, message: '' });
      
      const response = await fetch('/api/contact-form', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });

      const result = await response.json();

      if (response.ok && result.success) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
        await fetch('/.netlify/functions/telegram-notify', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            type: 'contact_form',
            data: {
              ...formData,
              phone: formatPhone(formData.phone)
            }
          })
        });

        setStatus({
          loading: false,
          success: true,
          error: false,
          message: '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.'
        });

        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        setFormData({
          name: '',
          phone: '',
          email: '',
          company: '',
          message: ''
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        if (typeof window !== 'undefined' && window.gtag) {
          window.gtag('event', 'form_submit', {
            form_type: 'contact',
            company: formData.company || 'not_specified'
          });
        }
      } else {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('Form submission error:', error);
      setStatus({
        loading: false,
        success: false,
        error: true,
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.'
      });
    }
  };

  return (
    <section className="contact-section" id="contact">
      <div className="contact-container">
        <div className="section-header">
          <h2>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å <span className="gradient-text">—Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é</span>?</h2>
          <p>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</p>
        </div>

        <div className="contact-content">
          <div className="contact-benefits">
            <h3>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</h3>
            <ul className="benefits-list">
              <li>
                <span className="benefit-icon">üìä</span>
                <div>
                  <strong>–ê—É–¥–∏—Ç —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</strong>
                  <p>–ê–Ω–∞–ª–∏–∑ —É–∑–∫–∏—Ö –º–µ—Å—Ç –∏ —Ç–æ—á–µ–∫ —Ä–æ—Å—Ç–∞</p>
                </div>
              </li>
              <li>
                <span className="benefit-icon">üí°</span>
                <div>
                  <strong>–ü–ª–∞–Ω —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏</strong>
                  <p>–ü–æ—à–∞–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è</p>
                </div>
              </li>
              <li>
                <span className="benefit-icon">üí∞</span>
                <div>
                  <strong>–†–∞—Å—á–µ—Ç ROI</strong>
                  <p>–¢–æ—á–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</p>
                </div>
              </li>
              <li>
                <span className="benefit-icon">üéØ</span>
                <div>
                  <strong>–î–µ–º–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</strong>
                  <p>–ü–æ–∫–∞–∂–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö</p>
                </div>
              </li>
            </ul>

            <div className="contact-info">
              <div className="contact-item">
                <span className="contact-icon">üìû</span>
                <div className="contact-details">
                  <span className="contact-label">–¢–µ–ª–µ—Ñ–æ–Ω</span>
                  <a href="tel:+79040476383" className="contact-value">+7 (904) 047-63-83</a>
                </div>
              </div>
              
              <div className="contact-item">
                <span className="contact-icon">‚úâÔ∏è</span>
                <div className="contact-details">
                  <span className="contact-label">Email</span>
                  <a href="mailto:aineuroexpert@gmail.com" className="contact-value">aineuroexpert@gmail.com</a>
                </div>
              </div>
            </div>
          </div>

          <form className="contact-form" onSubmit={handleSubmit}>
            <div className="form-row">
              <div className="form-group">
                <label htmlFor="name">–ò–º—è *</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  required
                />
              </div>
              <div className="form-group">
                <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  placeholder="+7 (999) 123-45-67"
                  required
                />
              </div>
            </div>

            <div className="form-row">
              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  placeholder="ivan@company.ru"
                />
              </div>
              <div className="form-group">
                <label htmlFor="company">–ö–æ–º–ø–∞–Ω–∏—è</label>
                <input
                  type="text"
                  id="company"
                  name="company"
                  value={formData.company}
                  onChange={handleChange}
                  placeholder="–û–û–û –†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞"
                />
              </div>
            </div>

            <div className="form-group">
              <label htmlFor="message">–°–æ–æ–±—â–µ–Ω–∏–µ</label>
              <textarea
                id="message"
                name="message"
                value={formData.message}
                onChange={handleChange}
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ..."
                rows="4"
              />
            </div>

            <button 
              type="submit" 
              className={`btn-primary submit-btn ${status.loading ? 'loading' : ''}`}
              disabled={status.loading}
            >
              {status.loading ? (
                <>
                  <span className="spinner"></span>
                  –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
                </>
              ) : (
                <>
                  üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </>
              )}
            </button>

            {status.message && (
              <div className={`form-status ${status.success ? 'success' : 'error'}`}>
                {status.success ? '‚úÖ' : '‚ö†Ô∏è'} {status.message}
              </div>
            )}

            <p className="form-disclaimer">
              –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å <a href="/privacy">–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
            </p>
          </form>
        </div>
      </div>
    </section>
  );
}