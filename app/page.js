'use client';
import { useState } from 'react';
import dynamic from 'next/dynamic';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑ SSR
const BusinessShowcase = dynamic(() => import('./components/BusinessShowcase'), { 
  ssr: false,
  loading: () => <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
});

const VoiceFeedback = dynamic(() => import('./components/VoiceFeedback'), { 
  ssr: false 
});

const SmartFAQ = dynamic(() => import('./components/SmartFAQ'), { 
  ssr: false 
});

const PersonalizationModule = dynamic(() => import('./components/PersonalizationModule'), { 
  ssr: false 
});

const LearningPlatform = dynamic(() => import('./components/LearningPlatform'), { 
  ssr: false 
});

const NeuralNetworkBackground = dynamic(() => import('./components/NeuralNetworkBackground'), { 
  ssr: false,
  loading: () => <div className="neural-bg-placeholder" style={{height: '100vh', background: 'linear-gradient(45deg, #1a1a2e, #16213e)'}}></div>
});

const AnalyticsDashboard = dynamic(() => import('./components/CRMAnalytics').then(mod => ({ default: mod.AnalyticsDashboard })), { 
  ssr: false 
});

const AdminPanel = dynamic(() => import('./components/AdminPanel'), { 
  ssr: false 
});

const AutomationStatus = dynamic(() => import('./components/ContentAutomation').then(mod => ({ default: mod.AutomationStatus })), { 
  ssr: false 
});

const UXTestingPanel = dynamic(() => import('./components/UXTestingPanel'), { 
  ssr: false 
});

const MobileTestPanel = dynamic(() => import('./components/MobileTestPanel'), { 
  ssr: false 
});

const SmokeTestPanel = dynamic(() => import('./components/SmokeTestPanel'), { 
  ssr: false 
});

const PerformancePanel = dynamic(() => import('./components/PerformancePanel'), { 
  ssr: false 
});

const ErrorLogPanel = dynamic(() => import('./components/ErrorLogPanel'), { 
  ssr: false 
});

// –ì–ª–∞–≤–Ω—ã–π Hero-–±–ª–æ–∫ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó
function HeroSection() {
  const [animationEnabled, setAnimationEnabled] = useState(true);

  const scrollToSection = (id) => {
    const element = document.getElementById(id);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <section className="hero-section">
      <NeuralNetworkBackground animationEnabled={animationEnabled} />
      
      <div className="hero-content">
        <div className="hero-text">
          <h1 className="hero-title">
            AI NeuroExpert ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞
          </h1>
          
          <p className="hero-subtitle">
            –í–Ω–µ–¥—Ä—è–µ–º AI –ø–æ–¥ –∫–ª—é—á, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —É—Å–∫–æ—Ä—è–µ–º —Ä–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏ –∑–∞ —Å—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã—Ö.
          </p>
          
          <div className="hero-cta">
            <button 
              className="cta-primary"
              onClick={() => scrollToSection('showcase')}
            >
              üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–µ–π—Å—ã
            </button>
            <button 
              className="cta-secondary"
              onClick={() => scrollToSection('calculator')}
            >
              üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã–≥–æ–¥—É
            </button>
            <button 
              className="cta-tertiary"
              onClick={() => scrollToSection('manager')}
            >
              üí¨ –°–ø—Ä–æ—Å–∏—Ç—å —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ
            </button>
          </div>
        </div>
        
        <div className="hero-controls">
          <div className="animation-control">
            <label className="animation-toggle">
              <input
                type="checkbox"
                checked={animationEnabled}
                onChange={(e) => setAnimationEnabled(e.target.checked)}
              />
              <span>üé¨ –ê–Ω–∏–º–∞—Ü–∏—è</span>
            </label>
          </div>
          
          <div className="trust-indicators">
            <div className="kpi-item">
              <span className="kpi-value">200-1200%</span>
              <span className="kpi-label">ROI</span>
            </div>
            <div className="kpi-item">
              <span className="kpi-value">95%</span>
              <span className="kpi-label">SLA</span>
            </div>
            <div className="kpi-item">
              <span className="kpi-value">4.8/5</span>
              <span className="kpi-label">NPS</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

function Calculator() {
  const [currentStep, setCurrentStep] = useState(1);
  const [industry, setIndustry] = useState('');
  const [investment, setInvestment] = useState(500000);
  const [adBudget, setAdBudget] = useState(100000);
  
  // –ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –æ—Ç—Ä–∞—Å–ª—è–º (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó)
  const multipliers = {
    retail: { saving: 2.5, revenue: 1.8, payback: 4, name: 'üõçÔ∏è –†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è' },
    manufacturing: { saving: 3.2, revenue: 2.1, payback: 6, name: 'üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ' },
    services: { saving: 2.8, revenue: 2.3, payback: 3, name: 'üíº –£—Å–ª—É–≥–∏/–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥' },
    restaurant: { saving: 2.2, revenue: 1.9, payback: 5, name: 'üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å' },
    logistics: { saving: 3.5, revenue: 2.0, payback: 8, name: 'üöö –õ–æ–≥–∏—Å—Ç–∏–∫–∞/–î–æ—Å—Ç–∞–≤–∫–∞' },
    finance: { saving: 3.8, revenue: 2.5, payback: 4, name: 'üí≥ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏' },
    healthcare: { saving: 3.0, revenue: 2.2, payback: 6, name: 'üè• –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ' },
    education: { saving: 2.6, revenue: 1.7, payback: 5, name: 'üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' }
  };

  const currentMultiplier = multipliers[industry];
  
  // –†–∞—Å—á–µ—Ç—ã ROI –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
  const annualSaving = investment * (currentMultiplier?.saving || 0);
  const additionalRevenue = investment * (currentMultiplier?.revenue || 0) + adBudget * 2.5;
  const totalBenefit = annualSaving + additionalRevenue;
  const roi = ((totalBenefit - investment - adBudget) / (investment + adBudget)) * 100;
  const paybackMonths = currentMultiplier?.payback || 0;
  
  const formatNumber = (num) => {
    return new Intl.NumberFormat('ru-RU').format(Math.round(num));
  };

  const nextStep = () => {
    if (currentStep < 3) setCurrentStep(currentStep + 1);
  };

  const prevStep = () => {
    if (currentStep > 1) setCurrentStep(currentStep - 1);
  };

  return (
    <section id="calculator" className="calculator-section">
      <div className="container">
        <h2>üí∞ ROI‚Äë–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏</h2>
        
        <div className="calculator-steps">
          <div className="step-indicator">
            {[1, 2, 3].map(step => (
              <div key={step} className={`step ${currentStep >= step ? 'active' : ''}`}>
                {step}
              </div>
            ))}
          </div>
          
          {currentStep === 1 && (
            <div className="step-content">
              <h3>–®–∞–≥ 1: –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—Ä–∞—Å–ª—å</h3>
              <div className="industry-grid">
                {Object.entries(multipliers).map(([key, data]) => (
                  <button
                    key={key}
                    className={`industry-card ${industry === key ? 'selected' : ''}`}
                    onClick={() => setIndustry(key)}
                  >
                    {data.name}
                  </button>
                ))}
              </div>
              {industry && (
                <button className="step-btn" onClick={nextStep}>
                  –î–∞–ª–µ–µ ‚Üí
                </button>
              )}
            </div>
          )}
          
          {currentStep === 2 && (
            <div className="step-content">
              <h3>–®–∞–≥ 2: –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</h3>
              
              <div className="input-group">
                <label>–°—É–º–º–∞ –≤–ª–æ–∂–µ–Ω–∏–π –≤ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é:</label>
                <input
                  type="range"
                  min="50000"
                  max="5000000"
                  step="50000"
                  value={investment}
                  onChange={(e) => setInvestment(Number(e.target.value))}
                />
                <span className="value">{formatNumber(investment)} ‚ÇΩ</span>
              </div>
              
              <div className="input-group">
                <label>–ë—é–¥–∂–µ—Ç –Ω–∞ —Ä–µ–∫–ª–∞–º—É (–º–µ—Å—è—á–Ω—ã–π):</label>
                <input
                  type="range"
                  min="10000"
                  max="500000"
                  step="10000"
                  value={adBudget}
                  onChange={(e) => setAdBudget(Number(e.target.value))}
                />
                <span className="value">{formatNumber(adBudget)} ‚ÇΩ</span>
              </div>
              
              <div className="step-navigation">
                <button className="step-btn secondary" onClick={prevStep}>
                  ‚Üê –ù–∞–∑–∞–¥
                </button>
                <button className="step-btn" onClick={nextStep}>
                  –†–∞—Å—Å—á–∏—Ç–∞—Ç—å ‚Üí
                </button>
              </div>
            </div>
          )}
          
          {currentStep === 3 && currentMultiplier && (
            <div className="step-content">
              <h3>–®–∞–≥ 3: –†–µ–∑—É–ª—å—Ç–∞—Ç</h3>
              
              <div className="results-grid">
                <div className="result-card">
                  <h4>üí∏ –≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</h4>
                  <div className="result-value">{formatNumber(annualSaving)} ‚ÇΩ/–≥–æ–¥</div>
                </div>
                
                <div className="result-card">
                  <h4>üìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–ø. –ø—Ä–∏–±—ã–ª—å</h4>
                  <div className="result-value">{formatNumber(additionalRevenue)} ‚ÇΩ/–≥–æ–¥</div>
                </div>
                
                <div className="result-card highlight">
                  <h4>üéØ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å/—ç—Ñ—Ñ–µ–∫—Ç</h4>
                  <div className="result-value">{formatNumber(totalBenefit)} ‚ÇΩ/–≥–æ–¥</div>
                </div>
                
                <div className="result-card">
                  <h4>‚ö° ROI</h4>
                  <div className="result-value">{Math.round(roi)}%</div>
                </div>
                
                <div className="result-card">
                  <h4>‚è∞ –°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</h4>
                  <div className="result-value">{paybackMonths} –º–µ—Å.</div>
                </div>
              </div>
              
              <div className="roi-explanation">
                <details>
                  <summary>‚ùì –ö–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è ROI?</summary>
                  <p>
                    ROI —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: (–û–±—â–∞—è –≤—ã–≥–æ–¥–∞ - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏) / –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ √ó 100%.
                    –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —ç–∫–æ–Ω–æ–º–∏—è –æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –æ—Ç 
                    –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞.
                  </p>
                </details>
              </div>
              
              <div className="step-navigation">
                <button className="step-btn secondary" onClick={prevStep}>
                  ‚Üê –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                </button>
                <button className="step-btn primary">
                  üìû –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </section>
  );
}

function Assistant() {
  const [q, setQ] = useState('');
  const [a, setA] = useState('');
  const [loading, setLoading] = useState(false);
  const [typing, setTyping] = useState(false);

  const typewriterEffect = (text) => {
    setA('');
    setTyping(true);
    let i = 0;
    const timer = setInterval(() => {
      setA(prev => prev + text.charAt(i));
      i++;
      if (i >= text.length) {
        clearInterval(timer);
        setTyping(false);
      }
    }, 30);
  };

  const ask = async () => {
    if (!q || loading) return;
    setLoading(true);
    setA('');
    try {
      const res = await fetch('/.netlify/functions/assistant', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ question: q }),
      });
      if (!res.ok) {
        throw new Error(`HTTP error! status: ${res.status}`);
      }
      const data = await res.json();
      typewriterEffect(data.answer);
    } catch (error) {
      console.error("Failed to fetch assistant's response:", error);
      if (error.message.includes('500')) {
        typewriterEffect('‚ö†Ô∏è –£–ø—Ä–∞–≤–ª—è—é—â–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É GEMINI_API_KEY –≤ Netlify Environment Variables. –ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ FAQ –∏–ª–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ROI.');
      } else {
        typewriterEffect('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —É–ø—Ä–∞–≤–ª—è—é—â–µ–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ FAQ.');
      }
    } finally {
      setLoading(false);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !loading) {
      ask();
    }
  };

  return (
    <div className="card">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
      <div style={{
        marginBottom: 20,
        padding: 16,
        background: 'linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(16, 185, 129, 0.05))',
        borderRadius: 12,
        border: '1px solid rgba(34, 197, 94, 0.3)',
        position: 'relative',
        overflow: 'hidden'
      }}>
        <div style={{
          position: 'absolute',
          top: 0,
          left: '-100%',
          width: '100%',
          height: '100%',
          background: 'linear-gradient(90deg, transparent, rgba(34, 197, 94, 0.1), transparent)',
          animation: 'securityScan 3s ease-in-out infinite'
        }}></div>
        
        <div style={{display: 'flex', alignItems: 'center', gap: 12, marginBottom: 8}}>
          <div style={{
            fontSize: '24px',
            animation: 'securityPulse 2s ease-in-out infinite'
          }}>üîí</div>
          <h3 style={{
            margin: 0,
            fontSize: '16px',
            fontWeight: 'bold',
            background: 'linear-gradient(45deg, #22c55e, #10b981)',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent'
          }}>–ì–∞—Ä–∞–Ω—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
        </div>
        
        <div style={{fontSize: '13px', color: 'var(--muted)', lineHeight: 1.5}}>
          üõ°Ô∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É AES-256<br/>
          üåê –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º GDPR –∏ 152-–§–ó<br/>
          ‚úÖ –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
        </div>
      </div>

      {/* –£–ø—Ä–∞–≤–ª—è—é—â–∏–π —Å –∞–≤–∞—Ç–∞—Ä–æ–º */}
      <div style={{display: 'flex', alignItems: 'center', gap: 16, marginBottom: 16}}>
        <div style={{
          width: 60,
          height: 60,
          borderRadius: '50%',
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          fontSize: '24px',
          border: '3px solid var(--accent)',
          boxShadow: '0 4px 15px rgba(125, 211, 252, 0.3)',
          animation: 'managerPulse 2s ease-in-out infinite',
          position: 'relative'
        }}>
          <div style={{
            position: 'absolute',
            width: '100%',
            height: '100%',
            borderRadius: '50%',
            border: '2px solid var(--accent)',
            animation: 'managerRing 3s linear infinite'
          }}></div>
          üë®‚Äçüíº
        </div>
        
        <div>
          <h2 style={{margin: '0 0 4px', fontSize: '18px'}}>üéØ AI –£–ø—Ä–∞–≤–ª—è—é—â–∏–π</h2>
          <div style={{fontSize: '12px', color: 'var(--muted)'}}>
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
          </div>
        </div>
      </div>
      
      <input 
        placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å —É–ø—Ä–∞–≤–ª—è—é—â–µ–º—É..." 
        value={q} 
        onChange={e => setQ(e.target.value)} 
        onKeyPress={handleKeyPress}
        disabled={loading}
        style={{
          marginBottom: 12,
          border: '2px solid var(--accent)',
          background: 'rgba(125, 211, 252, 0.05)'
        }}
      />
      <button onClick={ask} disabled={loading || !q}>
        {loading ? 'üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...' : 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'}
      </button>
      
      <div style={{fontSize: '12px', color: 'var(--muted)', marginTop: 8}}>
        üí° –ï—Å–ª–∏ —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É API –∫–ª—é—á–∞ –≤ Netlify
      </div>
      
      {(a || typing) && (
        <div style={{
          marginTop: 16, 
          padding: 16, 
          background: 'linear-gradient(135deg, rgba(125, 211, 252, 0.1), rgba(125, 211, 252, 0.05))', 
          borderRadius: 12, 
          borderLeft: '4px solid var(--accent)',
          position: 'relative'
        }}>
          <div style={{display: 'flex', alignItems: 'center', gap: 8, marginBottom: 8}}>
            <div style={{fontSize: '16px'}}>üë®‚Äçüíº</div>
            <strong style={{color: 'var(--accent)'}}>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ:</strong>
          </div>
          <div style={{lineHeight: 1.6}}>{a}</div>
          {typing && <span style={{animation: 'blink 1s infinite', color: 'var(--accent)'}}>|</span>}
        </div>
      )}
      <style jsx>{`
        @keyframes blink {
          0%, 50% { opacity: 1; }
          51%, 100% { opacity: 0; }
        }
      `}</style>
    </div>
  );
}

function FAQ() {
  const faqs = [
    {q: '–ó–∞ —Å–∫–æ–ª—å–∫–æ –æ–∫—É–ø–∞–µ—Ç—Å—è —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è?', a: '–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç—Ä–∞—Å–ª–∏: –æ—Ç 3 –¥–æ 8 –º–µ—Å—è—Ü–µ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞.'},
    {q: '–ö–∞–∫–æ–π ROI –º–æ–∂–Ω–æ –æ–∂–∏–¥–∞—Ç—å?', a: '–°—Ä–µ–¥–Ω–∏–π ROI —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 150-350% –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –±–∏–∑–Ω–µ—Å–∞ –∏ –±—é–¥–∂–µ—Ç–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.'},
    {q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç AI-—É–ø—Ä–∞–≤–ª—è—é—â–∏–π?', a: '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.'},
    {q: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ?', a: '–î–∞! –í—Å–µ –¥–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É AES-256, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç GDPR –∏ 152-–§–ó. –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.'},
    {q: '–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è?', a: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, CRM/ERP —Å–∏—Å—Ç–µ–º—ã, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, AI-—Ä–µ—à–µ–Ω–∏—è.'},
    {q: '–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –º–∞–ª–æ–º—É –±–∏–∑–Ω–µ—Å—É?', a: '–î–∞! –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç –æ—Ç 100,000‚ÇΩ —É–∂–µ –¥–∞–µ—Ç –æ—â—É—Ç–∏–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞.'}
  ];
  return (
    <div className="card">
      <h2>‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
      <div style={{fontSize: '14px', lineHeight: 1.6}}>
        {faqs.map((f, i) => (
          <div key={i} style={{marginBottom: 16, paddingBottom: 12, borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
            <div style={{fontWeight: 'bold', marginBottom: 6, color: 'var(--accent)'}}>{f.q}</div>
            <div style={{color: 'var(--muted)'}}>{f.a}</div>
          </div>
        ))}
      </div>
    </div>
  );
}

function Popup() {
  const [show, setShow] = useState(false);
  
  return (
    <div>
      <button 
        onClick={() => setShow(true)} 
        style={{
          marginBottom: 10,
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          color: 'white',
          border: 'none',
          padding: '12px 24px',
          borderRadius: '25px',
          fontWeight: 'bold',
          cursor: 'pointer',
          boxShadow: '0 4px 15px rgba(102, 126, 234, 0.4)',
          transition: 'all 0.3s ease'
        }}
      >
        ‚ú® –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–º–∏—É–º pop-up
      </button>
      
      {show && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0,0,0,0.8)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000,
          animation: 'fadeIn 0.3s ease'
        }}>
          <div style={{
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            color: 'white',
            padding: 40,
            borderRadius: 20,
            minWidth: 400,
            maxWidth: 500,
            textAlign: 'center',
            boxShadow: '0 20px 60px rgba(0,0,0,0.5)',
            position: 'relative',
            animation: 'slideIn 0.4s ease'
          }}>
            <div style={{fontSize: '48px', marginBottom: 20}}>üéâ</div>
            <h3 style={{margin: '0 0 16px', fontSize: '24px', fontWeight: 'bold'}}>
              üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NeuroExpert!
            </h3>
            <p style={{margin: '0 0 24px', fontSize: '16px', lineHeight: 1.6, opacity: 0.9}}>
              –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∞—É–¥–∏—Ç–∞ –∏ ROI-—Ä–∞—Å—á–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞! 
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.
            </p>
            <div style={{
              background: 'rgba(255,255,255,0.1)',
              padding: 16,
              borderRadius: 12,
              marginBottom: 24,
              fontSize: '14px'
            }}>
              ‚úÖ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ ‚Äî —Ç–æ—á–Ω—ã–π ROI –ø–æ –æ—Ç—Ä–∞—Å–ª—è–º<br/>
              ‚úÖ AI –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç ‚Äî —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –±–∏–∑–Ω–µ—Å—É<br/>
              ‚úÖ –ü—Ä–æ–≥–Ω–æ–∑—ã –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏ ‚Äî —Å—Ä–æ–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π<br/>
              ‚úÖ –û—Ç—Ä–∞—Å–ª–µ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äî –¥–∞–Ω–Ω—ã–µ –ø–æ 5 —Å—Ñ–µ—Ä–∞–º –±–∏–∑–Ω–µ—Å–∞
            </div>
            <button 
              onClick={() => setShow(false)}
              style={{
                background: 'rgba(255,255,255,0.2)',
                color: 'white',
                border: '2px solid rgba(255,255,255,0.3)',
                padding: '12px 32px',
                borderRadius: '25px',
                fontWeight: 'bold',
                cursor: 'pointer',
                transition: 'all 0.2s ease'
              }}
            >
              üéØ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!
            </button>
          </div>
        </div>
      )}
      
      <style jsx>{`
        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }
        @keyframes slideIn {
          from { opacity: 0; transform: translateY(-50px) scale(0.9); }
          to { opacity: 1; transform: translateY(0) scale(1); }
        }
      `}</style>
    </div>
  );
}

export default function HomePage() {
  const [activeTab, setActiveTab] = useState('main');

  if (activeTab === 'main') {
    return (
      <div className="app">
        <HeroSection />
        
        <main className="main-content">
          <BusinessShowcase />
          <Calculator />
          <SmartFAQ />
          <PersonalizationModule />
          <LearningPlatform />
        </main>
        
        <VoiceFeedback />
        
        <nav className="admin-nav">
          <button onClick={() => setActiveTab('admin')}>‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞</button>
          <button onClick={() => setActiveTab('analytics')}>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</button>
          <button onClick={() => setActiveTab('testing')}>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</button>
        </nav>
      </div>
    );
  }

  if (activeTab === 'admin') {
    return (
      <div className="admin-app">
        <AdminPanel />
        <button className="back-btn" onClick={() => setActiveTab('main')}>
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
        </button>
      </div>
    );
  }

  if (activeTab === 'analytics') {
    return (
      <div className="analytics-app">
        <AnalyticsDashboard />
        <AutomationStatus />
        <button className="back-btn" onClick={() => setActiveTab('main')}>
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
        </button>
      </div>
    );
  }

  if (activeTab === 'testing') {
    return (
      <div className="testing-app">
        <UXTestingPanel />
        <MobileTestPanel />
        <SmokeTestPanel />
        <PerformancePanel />
        <ErrorLogPanel />
        <button className="back-btn" onClick={() => setActiveTab('main')}>
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
        </button>
      </div>
    );
  }

  return null;
}
