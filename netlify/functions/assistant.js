const { GoogleGenerativeAI } = require("@google/generative-ai");

exports.handler = async function(event, context) {
  // CORS headers –¥–ª—è –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
    'Content-Type': 'application/json; charset=utf-8'
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers,
      body: ''
    };
  }

  if (event.httpMethod !== 'POST') {
    return { 
      statusCode: 405, 
      headers,
      body: JSON.stringify({ error: 'Method Not Allowed' })
    };
  }

  let question;
  try {
    const body = JSON.parse(event.body || '{}');
    question = body.question;
  } catch (parseError) {
    return {
      statusCode: 400,
      headers,
      body: JSON.stringify({ error: 'Invalid JSON in request body' })
    };
  }

  const apiKey = process.env.GEMINI_API_KEY;

  if (!apiKey) {
    console.error('GEMINI_API_KEY is not configured');
    return { 
      statusCode: 500, 
      headers,
      body: JSON.stringify({ error: 'API key is not configured. Please contact support.' })
    };
  }
  
  if (!question || question.trim() === '') {
    return { 
      statusCode: 400, 
      headers,
      body: JSON.stringify({ error: 'Question is required and cannot be empty.' })
    };
  }

  try {
    const genAI = new GoogleGenerativeAI(apiKey);
    const model = genAI.getGenerativeModel({ 
      model: "gemini-1.5-flash",
      generationConfig: {
        temperature: 0.7,
        topK: 40,
        topP: 0.95,
        maxOutputTokens: 1024,
      }
    });
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI-—É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ
    const knowledgeBase = `
    –†–û–õ–¨: –í—ã - –ê–ª–µ–∫—Å–µ–π, –≤–µ–¥—É—â–∏–π —É–ø—Ä–∞–≤–ª—è—é—â–∏–π NeuroExpert —Å 8-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏.
    
    –°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
    - –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
    - –ì–æ–≤–æ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞
    - –í—Å–µ–≥–¥–∞ —Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –≤—ã–≥–æ–¥–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    - –ü—Ä–∏–≤–æ–¥–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–∏–º–µ—Ä—ã
    - –û—Ç–≤–µ—á–∞–π—Ç–µ –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ
    
    –§–ò–õ–û–°–û–§–ò–Ø:
    - –í–∞—à–∞ –º–∏—Å—Å–∏—è: –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø–æ–ª—å–∑—É –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    - –í—Å–µ–≥–¥–∞ –æ–±—ä—è—Å–Ω—è–π—Ç–µ –ó–ê–ß–ï–ú —ç—Ç–æ –Ω—É–∂–Ω–æ –∫–ª–∏–µ–Ω—Ç—É
    - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –≤ –±–∏–∑–Ω–µ—Å-–≤—ã–≥–æ–¥—ã
    - –ë—É–¥—å—Ç–µ —á–µ—Å—Ç–Ω—ã–º–∏ –æ —Å—Ä–æ–∫–∞—Ö –∏ –∑–∞—Ç—Ä–∞—Ç–∞—Ö
    
    –ü–ê–ö–ï–¢–´ –£–°–õ–£–ì NEUROEXPERT:
    
    üè™ –ú–ê–õ–´–ô –ë–ò–ó–ù–ï–° (–¥–æ 10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤):
    ‚Ä¢ –ê—É–¥–∏—Ç –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: –æ—Ç 50,000‚ÇΩ, 5-7 –¥–Ω–µ–π, ROI 200-300%
    ‚Ä¢ –°–∞–π—Ç —Å AI-—ç–∫—Å–ø–µ—Ä—Ç–æ–º: –æ—Ç 120,000‚ÇΩ, 2-3 –Ω–µ–¥–µ–ª–∏, ROI 300-500%  
    ‚Ä¢ –ó–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º—ã + CRM: –æ—Ç 80,000‚ÇΩ, 1-2 –Ω–µ–¥–µ–ª–∏, ROI 250-400%
    
    üè¢ –°–†–ï–î–ù–ò–ô –ë–ò–ó–ù–ï–° (10-100 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤):
    ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑: –æ—Ç 200,000‚ÇΩ, 2-3 –Ω–µ–¥–µ–ª–∏, ROI 300-450%
    ‚Ä¢ Digital-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è: –æ—Ç 500,000‚ÇΩ, 1-3 –º–µ—Å—è—Ü–∞, ROI 400-600%
    ‚Ä¢ BI –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: –æ—Ç 350,000‚ÇΩ, 3-6 –Ω–µ–¥–µ–ª—å, ROI 350-550%
    
    üè≠ –ö–†–£–ü–ù–´–ô –ë–ò–ó–ù–ï–° (100+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤):
    ‚Ä¢ –¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è: –æ—Ç 1,500,000‚ÇΩ, 3-12 –º–µ—Å—è—Ü–µ–≤, ROI 600-1200%
    ‚Ä¢ ERP/CRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –æ—Ç 2,000,000‚ÇΩ, 6-12 –º–µ—Å—è—Ü–µ–≤, ROI 400-800%
    ‚Ä¢ AI-–ø—Ä–æ–¥—É–∫—Ç—ã: –æ—Ç 1,000,000‚ÇΩ, 4-8 –º–µ—Å—è—Ü–µ–≤, ROI 500-1000%
    
    –ö–õ–Æ–ß–ï–í–´–ï –§–ê–ö–¢–´:
    ‚Ä¢ 500+ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    ‚Ä¢ 98% –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ–¥–ª–µ–≤–∞—é—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
    ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π ROI –∫–ª–∏–µ–Ω—Ç–æ–≤: 2M+ —Ä—É–±–ª–µ–π
    ‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ KPI
    ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7, —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
    ‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã AES-256, GDPR, 152-–§–ó
    
    –û–¢–†–ê–°–õ–ò (–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã):
    ‚Ä¢ –†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è: —ç–∫–æ–Ω–æ–º–∏—è 2.5x, –¥–æ–ø.–≤—ã—Ä—É—á–∫–∞ 1.8x, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å 4 –º–µ—Å
    ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: —ç–∫–æ–Ω–æ–º–∏—è 3.2x, –¥–æ–ø.–≤—ã—Ä—É—á–∫–∞ 2.1x, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å 6 –º–µ—Å  
    ‚Ä¢ –£—Å–ª—É–≥–∏: —ç–∫–æ–Ω–æ–º–∏—è 2.8x, –¥–æ–ø.–≤—ã—Ä—É—á–∫–∞ 2.3x, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å 3 –º–µ—Å
    ‚Ä¢ –†–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å: —ç–∫–æ–Ω–æ–º–∏—è 2.2x, –¥–æ–ø.–≤—ã—Ä—É—á–∫–∞ 1.9x, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å 5 –º–µ—Å
    ‚Ä¢ –õ–æ–≥–∏—Å—Ç–∏–∫–∞: —ç–∫–æ–Ω–æ–º–∏—è 3.5x, –¥–æ–ø.–≤—ã—Ä—É—á–∫–∞ 2.0x, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å 8 –º–µ—Å
    
    –ü–†–û–¶–ï–°–° –†–ê–ë–û–¢–´:
    1. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 30 –º–∏–Ω (–ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º —á–µ—Ä–µ–∑ 15 –º–∏–Ω)
    2. –≠–∫—Å–ø—Ä–µ—Å—Å-–∞—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞ (1-2 –¥–Ω—è)
    3. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Å ROI-–ø—Ä–æ–≥–Ω–æ–∑–æ–º
    4. –ü–æ—ç—Ç–∞–ø–Ω–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏
    5. –û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã + –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    6. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è
    
    –ö–ê–ö –û–¢–í–ï–ß–ê–¢–¨ –ù–ê –ß–ê–°–¢–´–ï –í–û–ü–†–û–°–´:
    ‚Ä¢ –¶–µ–Ω–∞: –°–Ω–∞—á–∞–ª–∞ –≤—ã—è—Å–Ω–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞, –∑–∞—Ç–µ–º –Ω–∞–∑—ã–≤–∞–π—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —á—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ
    ‚Ä¢ –°—Ä–æ–∫–∏: –ë—É–¥—å—Ç–µ —á–µ—Å—Ç–Ω—ã, –ª—É—á—à–µ –∑–∞–ª–æ–∂–∏—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    ‚Ä¢ ROI: –ü—Ä–∏–≤–æ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –ø–æ—Ö–æ–∂–∏—Ö –æ—Ç—Ä–∞—Å–ª–µ–π, –æ–±—ä—è—Å–Ω—è–π—Ç–µ –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è –≤—ã–≥–æ–¥–∞
    ‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: –ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –≤ –±–∏–∑–Ω–µ—Å-–≤—ã–≥–æ–¥—ã (AI = —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ + –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤)
    
    –ó–ê–ü–†–ï–©–ï–ù–û:
    ‚Ä¢ –î–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ —Ü–µ–Ω—ã –±–µ–∑ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    ‚Ä¢ –û–±–µ—â–∞—Ç—å –Ω–µ—Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏  
    ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã
    ‚Ä¢ –ö—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
    `;

    const contextualPrompt = `${knowledgeBase}
    
    –ó–ê–î–ê–ß–ê: –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —É–ø—Ä–∞–≤–ª—è—é—â–∏–π NeuroExpert.
    
    –í–û–ü–†–û–° –ö–õ–ò–ï–ù–¢–ê: ${question}
    
    –ü–û–ú–ù–ò–¢–ï: 
    - –ì–æ–≤–æ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º
    - –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –≤—ã–≥–æ–¥–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞  
    - –ü—Ä–∏–≤–æ–¥–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —Ü–∏—Ñ—Ä—ã
    - –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ (–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é/—Ä–∞—Å—á–µ—Ç)
    - –ë—É–¥—å—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º, –∞ –Ω–µ —Ä–æ–±–æ—Ç–æ–º`;
    
    const result = await model.generateContent(contextualPrompt);
    const response = await result.response;
    const text = response.text();

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({ 
        answer: text,
        timestamp: new Date().toISOString()
      }),
    };
  } catch (error) {
    console.error('Error calling Gemini API:', error);
    
    // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    let errorMessage = 'Failed to get response from AI assistant.';
    if (error.message && error.message.includes('API_KEY_INVALID')) {
      errorMessage = 'API key is invalid. Please contact support.';
    } else if (error.message && error.message.includes('QUOTA_EXCEEDED')) {
      errorMessage = 'Service temporarily unavailable due to high demand. Please try again later.';
    }

    return {
      statusCode: 500,
      headers,
      body: JSON.stringify({ 
        error: errorMessage,
        timestamp: new Date().toISOString()
      }),
    };
  }
};
